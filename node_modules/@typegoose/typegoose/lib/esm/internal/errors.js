import { format } from 'util';
import { allVirtualoptions } from './utils';
export class InvalidPropError extends Error {
    constructor(targetName, key) {
        super(`Property "${targetName}.${key}" has no buildSchema!`);
    }
}
export class InvalidTypeError extends Error {
    constructor(targetName, key, Type) {
        super(`"${targetName}.${key}"'s Type is invalid! Type is: "${Type}"`);
    }
}
export class NotNumberTypeError extends Error {
    constructor(targetName, key, enumKey, enumValue) {
        if (enumKey || enumValue) {
            super(format('Typeof "%s.%s" is "Number", value is undefined/null or does not have a reverse mapping!\n'
                + 'Encountered with property: %s.%s', targetName, key, enumKey, typeof enumValue));
        }
        else {
            super(`Type of "${targetName}.${key}" property is not a number.`);
        }
    }
}
export class NotStringTypeError extends Error {
    constructor(targetName, key, enumKey, enumValue) {
        if (enumKey || enumValue) {
            super(format('Typeof "%s.%s" is "String", enum is not only Strings!\n'
                + 'Encountered with property: %s.%s', targetName, key, enumKey, typeof enumValue));
        }
        else {
            super(`Type of "${targetName}.${key}" property is not a string.`);
        }
    }
}
/** Not All Virtual Populate Elements Error */
export class NotAllVPOPElementsError extends Error {
    constructor(name, key) {
        super(`"${name}.${key}" has not all needed Virtual Populate Options! Needed are: ${allVirtualoptions.join(', ')}`);
    }
}
export class NoValidClass extends TypeError {
    constructor(cl) {
        super(`"${cl}" is not a function(/constructor)!`);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2ludGVybmFsL2Vycm9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQzlCLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUU1QyxNQUFNLE9BQU8sZ0JBQWlCLFNBQVEsS0FBSztJQUN6QyxZQUFZLFVBQWtCLEVBQUUsR0FBVztRQUN6QyxLQUFLLENBQUMsYUFBYSxVQUFVLElBQUksR0FBRyx1QkFBdUIsQ0FBQyxDQUFDO0lBQy9ELENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxLQUFLO0lBQ3pDLFlBQVksVUFBa0IsRUFBRSxHQUFXLEVBQUUsSUFBYTtRQUN4RCxLQUFLLENBQUMsSUFBSSxVQUFVLElBQUksR0FBRyxrQ0FBa0MsSUFBSSxHQUFHLENBQUMsQ0FBQztJQUN4RSxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsS0FBSztJQUMzQyxZQUFZLFVBQWtCLEVBQUUsR0FBVyxFQUFFLE9BQWdCLEVBQUUsU0FBa0I7UUFDL0UsSUFBSSxPQUFPLElBQUksU0FBUyxFQUFFO1lBQ3hCLEtBQUssQ0FBQyxNQUFNLENBQ1YsMkZBQTJGO2tCQUN6RixrQ0FBa0MsRUFDcEMsVUFBVSxFQUFFLEdBQUcsRUFDZixPQUFPLEVBQUUsT0FBTyxTQUFTLENBQzFCLENBQUMsQ0FBQztTQUNKO2FBQU07WUFDTCxLQUFLLENBQUMsWUFBWSxVQUFVLElBQUksR0FBRyw2QkFBNkIsQ0FBQyxDQUFDO1NBQ25FO0lBQ0gsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLGtCQUFtQixTQUFRLEtBQUs7SUFDM0MsWUFBWSxVQUFrQixFQUFFLEdBQVcsRUFBRSxPQUFnQixFQUFFLFNBQWtCO1FBQy9FLElBQUksT0FBTyxJQUFJLFNBQVMsRUFBRTtZQUN4QixLQUFLLENBQUMsTUFBTSxDQUNWLHlEQUF5RDtrQkFDdkQsa0NBQWtDLEVBQ3BDLFVBQVUsRUFBRSxHQUFHLEVBQ2YsT0FBTyxFQUFFLE9BQU8sU0FBUyxDQUMxQixDQUFDLENBQUM7U0FDSjthQUFNO1lBQ0wsS0FBSyxDQUFDLFlBQVksVUFBVSxJQUFJLEdBQUcsNkJBQTZCLENBQUMsQ0FBQztTQUNuRTtJQUNILENBQUM7Q0FDRjtBQUVELDhDQUE4QztBQUM5QyxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsS0FBSztJQUNoRCxZQUFZLElBQVksRUFBRSxHQUFXO1FBQ25DLEtBQUssQ0FBQyxJQUFJLElBQUksSUFBSSxHQUFHLDhEQUE4RCxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3JILENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxZQUFhLFNBQVEsU0FBUztJQUN6QyxZQUFZLEVBQU87UUFDakIsS0FBSyxDQUFDLElBQUksRUFBRSxvQ0FBb0MsQ0FBQyxDQUFDO0lBQ3BELENBQUM7Q0FDRiJ9